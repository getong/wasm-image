[package]
authors = ["Peerigon GmbH <hello@peerigon.com>"]
description = "⚡️ Blazing fast image manipulation powered by WebAssembly"
edition = "2018"
license = "MIT OR Apache-2.0"
name = "wasm-image"
repository = "https://github.com/peerigon/wasm-image"
version = "1.0.0"

# Currently necessary because of https://github.com/rustwasm/wasm-pack/issues/886
[package.metadata.wasm-pack.profile.release]
wasm-opt = ["-Oz", "--enable-mutable-globals"]

[lib]
crate-type = ["cdylib", "rlib"]

[features]
default = ["console_error_panic_hook"]

[dependencies]
image = {version = "0.23.12", default-features = false, features = ["png", "jpeg", "gif", "webp", "tiff", "bmp", "ico", "avif"]}
js-sys = "0.3.46"
wasm-bindgen = "0.2.69"

# The `console_error_panic_hook` crate provides better debugging of panics by
# logging them with `console.error`. This is great for development, but requires
# all the `std::fmt` and `std::panicking` infrastructure, so isn't great for
# code size when deploying.
console_error_panic_hook = {version = "0.1.6", optional = true}

# `wee_alloc` is a tiny allocator for wasm that is only ~1K in code size
# compared to the default allocator's ~10K. It is slower than the default
# allocator, however.
#
# Unfortunately, `wee_alloc` requires nightly Rust when targeting wasm for now.
wee_alloc = {version = "0.4.5", optional = true}

[dev-dependencies]
wasm-bindgen-test = "0.3.13"

[profile.release]
# Tell `rustc` to optimize for small code size.
opt-level = "s"
